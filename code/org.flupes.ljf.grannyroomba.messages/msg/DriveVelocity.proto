syntax = "proto2";

package grannyroomba.messages;

option java_package = "org.flupes.ljf.grannyroomba.messages";
option java_outer_classname = "DriveVelocityProto";

/*
 * Message to specify a velocity drive command.
 *
 * The unified velocity drive message allows to command
 * the mobile base in velocity mode for the following
 * 3 types of moves:
 *    - straight line (speed!=0 && spin==0)
 *    - turn in place (speed==0 && spin!=0)
 *    - arc circle (speed!=0 && spin!=0)
 *
 * The advantage of using the speed (linear velocity) and
 * spin (angular velocity) as parameter is double:
 *    - There is no singularities in the commands compared to
 *  	other set of parameters:
 * 			(speed, curvature) for point turn -> curvature = infinity
 * 			(speed, radius) for straight line -> radius = infinity
 * 	  - There is continuity when changing from an arc turn to a
 * 		point turn (given that the speed is within bounds).
 *
 * If radius/curvature are required, then can be extracted from
 * the (speed/spin) set as follow:
 *    - speed==0 and spin==0 -> stop (radius does not matter)
 *    - speed!=0 and spin==0 -> straight (curvature zero or radius infinite)
 *    - speed==0 and spin!=0 -> point turn (radius zero or curvature infinite)
 *    - speed!=0 and spin!=0 -> regular arc circle:
 * 		- velocity = speed
 * 		- radius = velocity/spin (or curvature = spin/velocity)
 */
message DriveVelocityMsg {

	// Linear velocity (speed) of the robot.
	// By convention:
	//   - the speed is expressed in m/s
	//   - a positive speed will make the mobile base move forward
	//   - a negative speed will make the mobile base move backward
	//   - a zero speed combined with a zero spin is equivalent to a stop
	//   - a zero speed combined with a non zero spin is a turn in place
	optional float speed = 1 [ default = 0 ];

	// Angular velocity (spin) of the robot.
	// By convention:
	//   - the spin is expressed in rad/s
	//   - a positive spin generates counter-clockwise rotation (to the left)
	//   - a negative spin generates clockwise rotation (to the right)
	optional float spin = 2 [ default = 0];

	// Optional time out in seconds.
	// The command will expire after the given time and then the mobile
	// base should normally stop (by convention).
	// A time out of zero indicate that the command should never expire,
	// it is the default behavior is the argument is omitted.
	optional float timeout = 3 [ default = 0 ];

}